[{"/Users/mccotter/McCotter/McCotter Portfolio/04 Acheivement 4/social-eyes/src/index.js":"1","/Users/mccotter/McCotter/McCotter Portfolio/04 Acheivement 4/social-eyes/src/reportWebVitals.js":"2","/Users/mccotter/McCotter/McCotter Portfolio/04 Acheivement 4/social-eyes/src/App.js":"3","/Users/mccotter/McCotter/McCotter Portfolio/04 Acheivement 4/social-eyes/src/EventList.js":"4","/Users/mccotter/McCotter/McCotter Portfolio/04 Acheivement 4/social-eyes/src/CitySearch.js":"5","/Users/mccotter/McCotter/McCotter Portfolio/04 Acheivement 4/social-eyes/src/api.js":"6","/Users/mccotter/McCotter/McCotter Portfolio/04 Acheivement 4/social-eyes/src/Event.js":"7","/Users/mccotter/McCotter/McCotter Portfolio/04 Acheivement 4/social-eyes/src/mock-data.js":"8","/Users/mccotter/McCotter/McCotter Portfolio/04 Acheivement 4/social-eyes/src/NumberOfEvents.js":"9","/Users/mccotter/McCotter/McCotter Portfolio/04 Acheivement 4/social-eyes/src/Alert.js":"10","/Users/mccotter/McCotter/McCotter Portfolio/04 Acheivement 4/social-eyes/src/serviceWorker.js":"11","/Users/mccotter/McCotter/McCotter Portfolio/04 Acheivement 4/social-eyes/src/serviceWorkerRegistration.js":"12","/Users/mccotter/McCotter/McCotter Portfolio/04 Acheivement 4/social-eyes/src/EventGenre.js":"13","/Users/mccotter/McCotter/McCotter Portfolio/04 Acheivement 4/social-eyes/src/Login.jsx":"14"},{"size":703,"mtime":1612722403914,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1610917296223,"results":"17","hashOfConfig":"18"},{"size":4417,"mtime":1612907648122,"results":"19","hashOfConfig":"16"},{"size":491,"mtime":1612661924661,"results":"20","hashOfConfig":"16"},{"size":1919,"mtime":1612890728676,"results":"21","hashOfConfig":"16"},{"size":3288,"mtime":1612724350760,"results":"22","hashOfConfig":"16"},{"size":1467,"mtime":1612722403910,"results":"23","hashOfConfig":"16"},{"size":3070,"mtime":1612660706673,"results":"24","hashOfConfig":"16"},{"size":997,"mtime":1612722403911,"results":"25","hashOfConfig":"16"},{"size":722,"mtime":1612722403832,"results":"26","hashOfConfig":"16"},{"size":5097,"mtime":1612722403916,"results":"27","hashOfConfig":"16"},{"size":5063,"mtime":1612304731941,"results":"28","hashOfConfig":"18"},{"size":1348,"mtime":1612801636034,"results":"29","hashOfConfig":"16"},{"size":1282,"mtime":1612886647172,"results":"30","hashOfConfig":"16"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"sjihih",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"312t0d",{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"33"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"/Users/mccotter/McCotter/McCotter Portfolio/04 Acheivement 4/social-eyes/src/index.js",[],["64","65"],"/Users/mccotter/McCotter/McCotter Portfolio/04 Acheivement 4/social-eyes/src/reportWebVitals.js",[],["66","67"],"/Users/mccotter/McCotter/McCotter Portfolio/04 Acheivement 4/social-eyes/src/App.js",["68","69"],"import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport EventGenre from './EventGenre';\nimport { OfflineAlert } from './Alert';\nimport {\n  ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer\n} from 'recharts';\n// import Login from './Login';\nimport { extractLocations, getEvents, checkToken } from './api';\nimport './nprogress.css';\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    numberOfEvents: 20,\n    selectedLocation: \"all\",\n    alertText: \"\",\n    tokenCheck: false,\n  }\n  \n  updateEvents = (location, eventCount) => {\n    const { selectedLocation, numberOfEvents } = this.state;\n    if (location) {\n    getEvents().then((events) => {\n      const locationEvents = location === \"all\" ?\n        events :\n        events.filter((event) => event.location === location);\n      const filteredEvents = locationEvents.slice(0, numberOfEvents);\n      this.setState({\n        events: filteredEvents,\n        selectedLocation: location,\n      });\n    });\n  } else {\n    getEvents().then((events) => {\n      const locationEvents = selectedLocation === \"all\" ?\n        events :\n        events.filter((event) => event.location === selectedLocation);\n      const filteredEvents = locationEvents.slice(0, eventCount);\n      this.setState({\n        events: filteredEvents,\n      });\n    });\n  }\n};\n\n// async componentDidMount() {\n//   const accessToken = localStorage.getItem(\"access_token\");\n//   const validToken = accessToken !== null  ? await checkToken(accessToken) : false;\n//   this.setState({ tokenCheck: validToken });\n//   if(validToken === true) this.updateEvents()\n//   const searchParams = new URLSearchParams(window.location.search);\n//   const code = searchParams.get(\"code\");\n\n//   this.mounted = true;\n//   if (code && this.mounted === true && validToken === false){ \n//     this.setState({tokenCheck:true });\n//     this.updateEvents()\n//   }\n// }\n\ncomponentDidMount() {\n  this.mounted = true;\n  getEvents().then((events) => {\n    if (this.mounted) {\n      this.setState({\n        events: events,\n        locations: extractLocations(events),\n      });\n    }\n  });\n  window.addEventListener(\"online\", this.offlineAlert());\n}\n\n  offlineAlert = () => {\n    if (navigator.onLine === false) {\n      this.setState({\n        alertText: \n        \"You are not connected to a network. Please connect to update the list of upcoming events.\"\n      });\n    } else {\n      this.setState({ alertText: \"\" });\n    }\n  };\n\n  componentWillUnmount(){\n    this.mounted = false;\n  }\n\n  getData = () => {\n    const { locations, events } = this.state;\n    const data = locations.map((location) => {\n      const number = events.filter((event) => event.location === location)\n        .length;\n      const city = location.split(\",\").shift();\n      return { city, number };\n    });\n    return data;\n  };\n\n  render () {\n    const { tokenCheck } = this.state;\n    return (\n    // tokenCheck === false ? (\n    //   <div className=\"App\">\n    //     <Login />\n    //     </div>\n    // ) : \n    \n      <div className=\"App\">\n        <div className=\"Selections\">\n        <OfflineAlert className=\"alert\" text={this.state.alertText} />\n        <CitySearch className=\"CitySearch\" locations={this.state.locations} updateEvents={this.updateEvents} />\n        <NumberOfEvents className=\"NumberOfEvents\" numberOfEvents={this.state.numberOfEvents} updateEvents={this.updateEvents} />\n        </div>\n        <h4>Events in each city</h4>\n      <div className=\"data-vis-wrapper\">\n        <EventGenre\n        locations={this.state.locations}\n        events={this.state.events} \n        />\n      <ResponsiveContainer height={400} >\n        <ScatterChart margin={{ top: 20, right: 20, bottom: 20, left: 20 }}>\n          <CartesianGrid />\n          <XAxis type=\"category\" dataKey=\"city\" name=\"city\" />\n          <YAxis\n            allowDecimals={false}\n            type=\"number\"\n            dataKey=\"number\"\n            name=\"number of events\"\n          />\n          <Tooltip cursor={{ strokeDasharray: \"3 3\" }} />\n          <Scatter data={this.getData()} fill=\"#8884d8\" />\n        </ScatterChart>\n      </ResponsiveContainer>\n      </div>\n        <EventList className=\"EventList\" events={this.state.events} />      \n      </div>\n    );\n  }\n}\n\nexport default App;\n","/Users/mccotter/McCotter/McCotter Portfolio/04 Acheivement 4/social-eyes/src/EventList.js",[],"/Users/mccotter/McCotter/McCotter Portfolio/04 Acheivement 4/social-eyes/src/CitySearch.js",[],"/Users/mccotter/McCotter/McCotter Portfolio/04 Acheivement 4/social-eyes/src/api.js",["70"],"import { mockData } from './mock-data';\nimport axios from 'axios';\nimport NProgress from 'nprogress';\n\nconst extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\n// const checkToken = async (accessToken) => {\n//   const result = await fetch(\n//     `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n//   )\n//     .then((res) => res.json())\n//     .catch((error) => error.json());\n\n//   return result.error ? false : true;\n// };\n\nconst checkToken = async (accessToken) => {\n  try{\n    const response = await axios(`https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`);\n    return true;\n  }catch(e){\n    return false\n  }\n}\n\nconst getEvents = async () => {\n  NProgress.start();\n\n  if (\n    !navigator.onLine &&\n    !window.location.href.startsWith(\"http://localhost\")\n  ) {\n    const events = localStorage.getItem(\"lastEvents\");\n    NProgress.done();\n    return JSON.parse(events).events;\n  }\n\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    NProgress.done();\n    return mockData;\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url = 'https://8cck9ad2v0.execute-api.us-east-2.amazonaws.com/dev/api/get-events/' + token;\n    const result = await axios.get(url);\n    if (result.data) {\n      let locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};\n\n\nconst getAccessToken = async () => {\n  const accessToken = await\n  localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || !tokenCheck) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new \n    URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    if (!code) {\n      const results = await axios.get(\n        \"https://8cck9ad2v0.execute-api.us-east-2.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n};\n\nconst removeQuery = () => {\n    if (window.history.pushState &&\n  window.location.pathname) {\n      var newurl =\n        window.location.protocol +\n        \"//\" +\n        window.location.host +\n        window.location.pathname;\n      window.history.pushState(\"\", \"\", newurl);\n    } else {\n      newurl = window.location.protocol + \"//\" +\n  window.location.host;\n      window.history.pushState(\"\", \"\", newurl);\n    }\n  };\n\nconst getToken = async (code) => {\n  removeQuery();\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    `https://8cck9ad2v0.execute-api.us-east-2.amazonaws.com/dev/api/token/${encodeCode}`\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};\n\nexport { getEvents, getAccessToken, extractLocations, getToken, checkToken  };\n","/Users/mccotter/McCotter/McCotter Portfolio/04 Acheivement 4/social-eyes/src/Event.js",[],"/Users/mccotter/McCotter/McCotter Portfolio/04 Acheivement 4/social-eyes/src/mock-data.js",[],"/Users/mccotter/McCotter/McCotter Portfolio/04 Acheivement 4/social-eyes/src/NumberOfEvents.js",[],"/Users/mccotter/McCotter/McCotter Portfolio/04 Acheivement 4/social-eyes/src/Alert.js",[],"/Users/mccotter/McCotter/McCotter Portfolio/04 Acheivement 4/social-eyes/src/serviceWorker.js",[],"/Users/mccotter/McCotter/McCotter Portfolio/04 Acheivement 4/social-eyes/src/serviceWorkerRegistration.js",[],"/Users/mccotter/McCotter/McCotter Portfolio/04 Acheivement 4/social-eyes/src/EventGenre.js",["71"],"import React, {useEffect, useState } from 'react';\nimport {\n  PieChart, Pie, Cell, ResponsiveContainer\n} from 'recharts';\n\nconst EventGenre = ({ events }) => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    setData(() => getData());\n  }, [events]);\n\n  const getData = () => {\n    const genres = [\"React\", \"JavaScript\", \"Node\", \"jQuery\", \"AngularJS\"];\n    const data = genres.map((genre) => {\n      const value = events.filter(({ summary }) =>\n        summary.split(\" \").includes(genre)\n      ).length;\n      return { name: genre, value };\n    });\n    return data;\n  };\n\n  const COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\", \"#85D2DB\"]\n  return (\n    <ResponsiveContainer height={400}>\n      <PieChart width={400} height={400}>\n        <Pie\n          data={data}\n          cx={200}\n          cy={200}\n          labelLine={false}\n          outerRadius={80}\n          fill=\"#8884d8\"\n          dataKey=\"value\"\n          label={({ name, percent }) =>\n            `${name} ${(percent * 100).toFixed(0)}%`\n          }\n        >\n          {data.map((entry, index) => (\n            <Cell\n              key={`cell-${index}`}\n              fill={COLORS[index % COLORS.length]}\n              name={entry.name}\n            />\n          ))}\n        </Pie>\n      </PieChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default EventGenre;","/Users/mccotter/McCotter/McCotter Portfolio/04 Acheivement 4/social-eyes/src/Login.jsx",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"72","replacedBy":"76"},{"ruleId":"74","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":12,"column":39,"nodeType":"80","messageId":"81","endLine":12,"endColumn":49},{"ruleId":"78","severity":1,"message":"82","line":106,"column":13,"nodeType":"80","messageId":"81","endLine":106,"endColumn":23},{"ruleId":"78","severity":1,"message":"83","line":23,"column":11,"nodeType":"80","messageId":"81","endLine":23,"endColumn":19},{"ruleId":"84","severity":1,"message":"85","line":11,"column":6,"nodeType":"86","endLine":11,"endColumn":14,"suggestions":"87"},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],["88"],["89"],"no-unused-vars","'checkToken' is defined but never used.","Identifier","unusedVar","'tokenCheck' is assigned a value but never used.","'response' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["90"],"no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},"Update the dependencies array to be: [events, getData]",{"range":"93","text":"94"},[256,264],"[events, getData]"]